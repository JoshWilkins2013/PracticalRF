---
const { amplitude = 100 } = Astro.props
---

<plot-window amplitude={amplitude}>
  <canvas></canvas>
</plot-window>

<style lang="scss" is:global>
  canvas {
    border: 1px solid white;
  }
</style>

<script>
  class PlotWindow extends HTMLElement {
    constructor() {
      super();

      const createAnimationFrame = (callback, targetFrameRate, timePrevious, timeCurrent) => {
        if (typeof timePrevious === 'number' && typeof timeCurrent === 'number') {
          const timeDelta = timeCurrent - timePrevious;
          if (typeof targetFrameRate !== 'number' || timeDelta >= 1000 / targetFrameRate) {
            const success = callback(timeDelta);
            if (!success) {
              return null;
            }
            timePrevious = timeCurrent;
          }
        } else {
          timePrevious = timeCurrent;
        }

        return window.requestAnimationFrame((timeCurrent) =>
          createAnimationFrame(callback, targetFrameRate, timePrevious, timeCurrent)
        );
      };

      const animation = (sine, amp, theta) => {
        let ctx = sine.getContext('2d');

        ctx.lineWidth = 2;
        ctx.strokeStyle = `rgba(255, 145, 85, 1)`;

        ctx.clearRect(0, 0, sine.width, sine.height);
        ctx.beginPath();

        const num_waves = 2;

        const sy = sine.height - sine.height / 2;
        let last_y = sy + amp * Math.sin(theta);
        ctx.moveTo(0, last_y);

        // Everything is relative to a "1 Hz" signal
        let plot_width = sine.width;
        let step_size = 1 / (num_waves * plot_width);
        for (let i = 0; i < num_waves; i += step_size) {
          let j = (i * plot_width) / num_waves;
          ctx.lineTo(j, sy + amp * Math.sin(i * 2 * Math.PI + theta));
        }

        ctx.stroke();
      }

      console.info('Initialized.');

      const createSine = (sine_id, amp, theta) => {
        return createAnimationFrame(() => {
          theta -= 0.1;
          animation(sine_id, amp, theta);
          return true;
        }, 120);
      };

      let theta = 0;
      let sine = this.querySelector('canvas');
      let amplitude = this.getAttribute('amplitude');
      createSine(sine, amplitude, theta);
    }
  }
  customElements.define('plot-window', PlotWindow);
</script>

